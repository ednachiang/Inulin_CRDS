### Calculate AUC (Area Under Curve - Rectangle Method)
ids <- levels(crds.auc$ID)
	# Create list of individual squirrel IDs
auc.df <- data.frame(crds.auc[1,])
	# Create dataframe to hold AUC data
auc.df <- auc.df[,-2:-3]
	# Prepare AUC dataframe
auc.df <- auc.df[,-8]
	# Prepare AUC dataframe
colnames(auc.df) <- c("AUC", "Number", "ID", "Season", "Sex", "Antibiotics", "Substrate")
	# Prepare AUC dataframe - Name columns

# For loop will run through every squrirel
for (i in 1:length(ids)){
  ID <- ids[i]
	# Save squirrel ID
  select <- crds.auc[which(crds.auc$ID == ID),]
    # Create Dataframe with CRDS values for 1 squirrel

  select$Delta <- select$Delta - select$Delta[1]
	# Normalize delta values to baseline
  
  select$RelTime <- select$RelTime - select$RelTime[1]
	# Normalize RelTime so it's relative to time since baseline measurement
  
  totTime <- select$RelTime[nrow(select)]
	# Calculate total time of CRDS experiment
    # Based on RelTime for the very last collected delta value
  
  n <- (nrow(select)-1)
	# Calculate total number of rectangles
	# This is the total number of delta values minus 1 because baseline is the start of our curve, so we don't need to calculate a rectangle for it
  
  int <- totTime/n
	# Calculate equally spaced intervals
  
  AUC <- 0
	# Create AUC variable
  
  # Run rectangle method integration
  for (j in 1:n){
    AUC <- AUC + (int*select$Delta[j+1])
		# int = width
		# select$Delta[j+1] = height (based on the delta value relative to baseline)
		# This for loop sums the AUC for each rectangle
  }
    
  auc.df[i,1] <- AUC
	# Add AUC to dataframe
  auc.df[i, 2:7] <- select[1, 4:9]
	# Add corresponding metadata to dataframe (based on squirrel ID)
}
